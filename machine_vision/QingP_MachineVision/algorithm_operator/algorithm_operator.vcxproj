<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7FC31A0D-89DF-4513-A4A6-52584A488794}</ProjectGuid>
    <Keyword>QtVS_v304</Keyword>
    <WindowsTargetPlatformVersion Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformVersion Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">10.0.19041.0</WindowsTargetPlatformVersion>
    <QtMsBuild Condition="'$(QtMsBuild)'=='' OR !Exists('$(QtMsBuild)\qt.targets')">$(MSBuildProjectDirectory)\QtMsBuild</QtMsBuild>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt_defaults.props')">
    <Import Project="$(QtMsBuild)\qt_defaults.props" />
  </ImportGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="QtSettings">
    <QtInstall>msvc2019_64</QtInstall>
    <QtModules>core</QtModules>
    <QtBuildConfig>debug</QtBuildConfig>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="QtSettings">
    <QtInstall>msvc2019_64</QtInstall>
    <QtModules>core</QtModules>
    <QtBuildConfig>release</QtBuildConfig>
  </PropertyGroup>
  <Target Name="QtMsBuildNotFound" BeforeTargets="CustomBuild;ClCompile" Condition="!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props')">
    <Message Importance="High" Text="QtMsBuild: could not locate qt.targets, qt.props; project may not build correctly." />
  </Target>
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
    <Import Project="..\third_party\props\opencv470_D.props" />
    <Import Project="..\third_party\props\halcon_xl_env.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
    <Import Project="..\third_party\props\opencv470_R.props" />
    <Import Project="..\third_party\props\halcon_xl_env.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ClCompile>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>ALGORITHM_OPERATOR_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ClCompile>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <PreprocessorDefinitions>ALGORITHM_OPERATOR_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="source\blob\common_blob_inspect.cpp" />
    <ClCompile Include="source\find_edge\bspline.cpp" />
    <ClCompile Include="source\find_edge\cubicspline.cpp" />
    <ClCompile Include="source\find_edge\EdgePointSpline.cpp" />
    <ClCompile Include="source\find_edge\FindEdge.cpp" />
    <ClCompile Include="source\find_edge\linesegmentdetector.cpp" />
    <ClCompile Include="source\find_edge\RansacAlgorithm.cpp" />
    <ClCompile Include="source\match\FindTemplateByGrayHisto.cpp" />
    <ClCompile Include="source\match\FindTemplateByHalconNcc.cpp" />
    <ClCompile Include="source\match\FindTemplateByHalconShape.cpp" />
    <ClCompile Include="source\match\FindTemplateByOpenCV.cpp" />
    <ClCompile Include="source\match\FindTemplateByOpenCVMultiAngle.cpp" />
    <ClCompile Include="source\match\FindTemplateByTwoLines.cpp" />
    <ClInclude Include="algorithm_operator_global.h" />
    <QtMoc Include="source\match\FindTemplateByGrayHisto.h" />
    <QtMoc Include="source\match\FindTemplateByHalconNcc.h" />
    <QtMoc Include="source\match\FindTemplateByHalconShape.h" />
    <QtMoc Include="source\match\FindTemplateByOpenCV.h" />
    <QtMoc Include="source\match\FindTemplateByOpenCVMultiAngle.h" />
    <QtMoc Include="source\match\FindTemplateByTwoLines.h" />
    <QtMoc Include="source\find_edge\bspline.h" />
    <ClInclude Include="source\algorithm_operator_common\algorithm_operator_common_define.h" />
    <ClInclude Include="source\algorithm_operator_common\algorithm_operator_common_enum.h" />
    <ClInclude Include="source\algorithm_operator_common\algorithm_operator_common_struct.h" />
    <QtMoc Include="source\find_edge\cubicspline.h" />
    <QtMoc Include="source\find_edge\EdgePointSpline.h" />
    <QtMoc Include="source\find_edge\FindEdge.h" />
    <QtMoc Include="source\find_edge\linesegmentdetector.h" />
    <ClInclude Include="source\find_edge\RansacAlgorithm.h" />
    <QtMoc Include="source\blob\common_blob_inspect.h" />
    <QtMoc Include="algorithm_operator.h" />
    <ClCompile Include="algorithm_operator.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\common_tool\common_tool.vcxproj">
      <Project>{60fdbb3b-43a0-4dc7-bfb8-044ffc19dda3}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt.targets')">
    <Import Project="$(QtMsBuild)\qt.targets" />
  </ImportGroup>
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>